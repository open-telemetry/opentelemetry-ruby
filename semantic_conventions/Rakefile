# frozen_string_literal: true

COPYRIGHT_NOTICE = <<~COPYRIGHT_NOTICE
# Copyright The OpenTelemetry Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# SPDX-License-Identifier: Apache-2.0
COPYRIGHT_NOTICE

require 'bundler/gem_tasks'
require 'rake/testtask'
require 'yard'
require 'rubocop/rake_task'
require 'tmpdir'
require 'pathname'

RuboCop::RakeTask.new

Rake::TestTask.new :test do |t|
  t.libs << '../api/lib'
  t.libs << 'test'
  t.libs << 'lib'
  t.test_files = FileList['test/**/*_test.rb']
end

YARD::Rake::YardocTask.new do |t|
  t.stats_options = ['--list-undoc']
end

if RUBY_ENGINE == 'truffleruby'
  task default: %i[generate test]
else
  task default: %i[generate test rubocop yard]
end

task generate: %i[update_gem_version generate_semconv generate_require_rollups]

SPEC_VERSION = '1.26.0'
OTEL_WEAVER_VERSION = 'v0.9.2'
semconv_source_dir = Pathname.new('./tmp/semconvrepo')
semconv_output_dir = Pathname.new('./lib/opentelemetry/semconv')

directory semconv_source_dir do
  puts "\n+++ Cloning semantic conventions repository\n"
  sh "git clone --tags --depth=1 --branch v#{SPEC_VERSION} https://github.com/open-telemetry/semantic-conventions.git #{semconv_source_dir}"
end

task check_out_semconv_version: [semconv_source_dir] do
  puts "\n+++ Checking out semantic conventions version #{SPEC_VERSION}\n"
  Dir.chdir(semconv_source_dir) do
    sh "git fetch --depth 1 origin tag v#{SPEC_VERSION}"
    sh "git checkout 'v#{SPEC_VERSION}'"
  end
end

task generate_semconv: %i[check_out_semconv_version] do
  puts "\n+++ Removing previously generated semantic conventions code.\n"
  semconv_output_dir
    .glob('**/*.rb')
    .then { |files| FileUtils.rm(files) }

  puts "\n+++ Generating semantic conventions code.\n"
  sh <<~DOCKER_COMMAND
    docker run --rm \
      -v "#{semconv_source_dir}/model":/source \
      -v ./templates:/templates \
      -v ./:/output \
      otel/weaver:#{OTEL_WEAVER_VERSION} \
      registry generate \
      --registry=/source \
      --templates=/templates \
      ruby \
      /output/#{semconv_output_dir}
  DOCKER_COMMAND
end

task :generate_require_rollups do
  puts "\n+++ Generating rollup/barrel files for semconv namespaces.\n"

  Rake::FileList[  # find all the generated semconv files
    semconv_output_dir + "**" + "attributes.rb",
    semconv_output_dir + "**" + "metrics.rb",
  ]
    .pathmap("%d") # turn the list into the parent directories (root_namespaces)
    .uniq          # remove duplicates
    .each do |namespace_dir| # in each directory, write out a file to require the generated signal names
      directory = Pathname.new(namespace_dir)
      rollup_filename = directory.dirname + "#{directory.basename}.rb"
      File.open(rollup_filename, "w") do |rollup|
        rollup << <<~FILE_HEADER
          # frozen_string_literal: true

          #{COPYRIGHT_NOTICE}
          # This file was autogenerated. Do not edit it by hand.

        FILE_HEADER
        rollup << "require_relative './#{directory.basename}/attributes.rb'\n" if File.exist?(directory + "attributes.rb")
        rollup << "require_relative './#{directory.basename}/metrics.rb'\n" if File.exist?(directory + "metrics.rb")
      end
      puts "âœ… Generated file \"#{rollup_filename}\""
    end
end

task :update_gem_version do
  puts "\n+++ Updating gem version to #{SPEC_VERSION}\n"
  sh %(sed -i.bak "s/VERSION = '.*'/VERSION = '#{SPEC_VERSION}'/g" lib/opentelemetry/semantic_conventions/version.rb)
  sh 'rm lib/opentelemetry/semantic_conventions/version.rb.bak'
end
