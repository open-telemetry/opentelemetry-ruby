{#-
# Copyright The OpenTelemetry Authors
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#}
{%- import 'common.j2' as common -%}
{%- if selector == 'any' -%}
{%-   set filtered_attributes = attributes_and_templates | list -%}
{%-   set gen_incubating = true -%}
{%- elif selector == 'is_stable' -%}
{%-   set filtered_attributes = attributes_and_templates | select(selector) | list -%}
{%-   set gen_incubating = false -%}
{%- endif -%}
{%- if filtered_attributes | count > 0 -%} {# only produce code if there are attributes #}
{{- common.file_header() }}

module OpenTelemetry
  module SemConv
  {%- if gen_incubating %}
  module Incubating
  {%- endif %}
    module {{ root_namespace | to_const_name }}
      # @!group Attribute Names
    {% for attribute in filtered_attributes %}
      # {{ common.to_docstring(attribute.brief) }}
          {%- if attribute.note %}
      #
      # {{ common.to_docstring(attribute.note) }}
          {%- endif %}
      #
      # @note {{ attribute.stability }}
          {%- if attribute | is_deprecated %}
      #
      # @deprecated {{ common.to_docstring(attribute.deprecated) }}
          {%- elif attribute | is_stable and gen_incubating %}
      #
      # @deprecated Now available in the stable namespace at {OpenTelemetry::SemConv::{{ root_namespace | to_const_name }}::{{ attribute.fqn | to_const_name }}}.
          {%- endif %}
          {%- if attribute.fqn not in excluded_attributes %}
            {%- if attribute | is_template %}
      {{ attribute.fqn | to_const_name }}_LAMBDA = -> (key) { "{{ attribute.fqn }}.#{key}" }
            {%- else %}
      {{ attribute.fqn | to_const_name }} = '{{ attribute.fqn }}'
            {%- endif %}
          {%- endif %}
  {% endfor %}
      # @!endgroup

      # @!group Metric Names
      # @!endgroup
    end
  {%- if gen_incubating %}
  end # module Incubating
  {%- endif %}
  end
end
{%- endif -%} {# only produce code if there are attributes #}
