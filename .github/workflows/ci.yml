name: CI

on:
  workflow_dispatch:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  base:
    strategy:
      fail-fast: false
      matrix:
        gem:
          - opentelemetry-api
          - opentelemetry-common
          - opentelemetry-metrics-api
          - opentelemetry-registry
          - opentelemetry-resource_detectors
          - opentelemetry-sdk
          - opentelemetry-semantic_conventions
          - opentelemetry-test-helpers
        os:
          - ubuntu-latest
          - macos-latest
          - windows-latest
    name: ${{ matrix.gem }} / ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
      - name: "Test Ruby 3.1"
        uses: ./.github/actions/test_gem
        with:
          gem: "${{ matrix.gem }}"
          ruby: "3.1"
      - name: "Test Ruby 3.0"
        if: "${{ matrix.os == 'ubuntu-latest' }}"
        uses: ./.github/actions/test_gem
        with:
          gem: "${{ matrix.gem }}"
          ruby: "3.0"
      - name: "Test Ruby 2.7"
        if: "${{ matrix.os == 'ubuntu-latest' }}"
        uses: ./.github/actions/test_gem
        with:
          gem: "${{ matrix.gem }}"
          ruby: "2.7"
          yard: true
          rubocop: true
          build: true
      - name: "Test JRuby"
        if: "${{ matrix.os == 'ubuntu-latest' }}"
        uses: ./.github/actions/test_gem
        with:
          gem: "${{ matrix.gem }}"
          ruby: "jruby"

  exporters:
    strategy:
      fail-fast: false
      matrix:
        gem:
          - opentelemetry-exporter-jaeger
          - opentelemetry-exporter-otlp
          - opentelemetry-exporter-zipkin
        os:
          - ubuntu-latest
          - macos-latest
          - windows-latest
        exclude:
          # Doesn't build on macos
          - os: macos-latest
            gem: opentelemetry-exporter-jaeger
    name: ${{ matrix.gem }} / ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
      - name: "Test Ruby 3.1"
        uses: ./.github/actions/test_gem
        with:
          gem: "${{ matrix.gem }}"
          ruby: "3.1"
      - name: "Test Ruby 3.0"
        if: "${{ matrix.os == 'ubuntu-latest' }}"
        uses: ./.github/actions/test_gem
        with:
          gem: "${{ matrix.gem }}"
          ruby: "3.0"
      - name: "Test Ruby 2.7"
        if: "${{ matrix.os == 'ubuntu-latest' }}"
        uses: ./.github/actions/test_gem
        with:
          gem: "${{ matrix.gem }}"
          ruby: "2.7"
          yard: true
          rubocop: true
          build: true
      - name: "Test JRuby"
        if: "${{ matrix.os == 'ubuntu-latest' }}"
        uses: ./.github/actions/test_gem
        with:
          gem: "${{ matrix.gem }}"
          ruby: "jruby"

  propagators:
    strategy:
      fail-fast: false
      matrix:
        gem:
          - opentelemetry-propagator-b3
          - opentelemetry-propagator-jaeger
          - opentelemetry-propagator-ottrace
          - opentelemetry-propagator-xray
        os:
          - ubuntu-latest
          - macos-latest
          - windows-latest
    name: ${{ matrix.gem }} / ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
      - name: "Test Ruby 3.1"
        uses: ./.github/actions/test_gem
        with:
          gem: "${{ matrix.gem }}"
          ruby: "3.1"
      - name: "Test Ruby 3.0"
        if: "${{ matrix.os == 'ubuntu-latest' }}"
        uses: ./.github/actions/test_gem
        with:
          gem: "${{ matrix.gem }}"
          ruby: "3.0"
      - name: "Test Ruby 2.7"
        if: "${{ matrix.os == 'ubuntu-latest' }}"
        uses: ./.github/actions/test_gem
        with:
          gem: "${{ matrix.gem }}"
          ruby: "2.7"
          yard: true
          rubocop: true
          build: true
      - name: "Test JRuby"
        if: "${{ matrix.os == 'ubuntu-latest' }}"
        uses: ./.github/actions/test_gem
        with:
          gem: "${{ matrix.gem }}"
          ruby: "jruby"

  instrumentation:
    strategy:
      fail-fast: false
      matrix:
        gem:
          - opentelemetry-instrumentation-action_pack
          - opentelemetry-instrumentation-action_view
          - opentelemetry-instrumentation-active_job
          - opentelemetry-instrumentation-active_model_serializers
          - opentelemetry-instrumentation-active_record
          - opentelemetry-instrumentation-active_support
          - opentelemetry-instrumentation-all
          - opentelemetry-instrumentation-aws_sdk
          - opentelemetry-instrumentation-base
          - opentelemetry-instrumentation-concurrent_ruby
          - opentelemetry-instrumentation-delayed_job
          - opentelemetry-instrumentation-ethon
          - opentelemetry-instrumentation-excon
          - opentelemetry-instrumentation-faraday
          - opentelemetry-instrumentation-graphql
          - opentelemetry-instrumentation-http
          - opentelemetry-instrumentation-http_client
          - opentelemetry-instrumentation-koala
          - opentelemetry-instrumentation-lmdb
          - opentelemetry-instrumentation-net_http
          - opentelemetry-instrumentation-rack
          - opentelemetry-instrumentation-rails
          - opentelemetry-instrumentation-restclient
          - opentelemetry-instrumentation-rspec
          - opentelemetry-instrumentation-sinatra
        os:
          - ubuntu-latest
          - macos-latest
          - windows-latest
        exclude:
          - os: windows-latest
            gem: opentelemetry-instrumentation-ethon
          - os: windows-latest
            gem: opentelemetry-instrumentation-action_pack
          - os: windows-latest
            gem: opentelemetry-instrumentation-restclient
          - os: windows-latest
            gem: opentelemetry-instrumentation-rails
          - os: macos-latest
            gem: opentelemetry-instrumentation-lmdb

    name: ${{ matrix.gem }} / ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
      - name: "Test Ruby 3.1"
        uses: ./.github/actions/test_gem
        with:
          gem: "${{ matrix.gem }}"
          ruby: "3.1"
      - name: "Test Ruby 3.0"
        if: "${{ matrix.os == 'ubuntu-latest' }}"
        uses: ./.github/actions/test_gem
        with:
          gem: "${{ matrix.gem }}"
          ruby: "3.0"
      - name: "Test Ruby 2.7"
        if: "${{ matrix.os == 'ubuntu-latest' }}"
        uses: ./.github/actions/test_gem
        with:
          gem: "${{ matrix.gem }}"
          ruby: "2.7"
          yard: true
          rubocop: true
          build: true
      - name: "JRuby Filter"
        id: jruby_skip
        shell: bash
        run: |
          echo "::set-output name=skip::false"
          [[ "${{ matrix.gem }}" == "opentelemetry-instrumentation-action_pack"              ]] && echo "::set-output name=skip::true"
          [[ "${{ matrix.gem }}" == "opentelemetry-instrumentation-action_view"              ]] && echo "::set-output name=skip::true"
          [[ "${{ matrix.gem }}" == "opentelemetry-instrumentation-active_model_serializers" ]] && echo "::set-output name=skip::true"
          [[ "${{ matrix.gem }}" == "opentelemetry-instrumentation-active_record"            ]] && echo "::set-output name=skip::true"
          [[ "${{ matrix.gem }}" == "opentelemetry-instrumentation-active_support"           ]] && echo "::set-output name=skip::true"
          [[ "${{ matrix.gem }}" == "opentelemetry-instrumentation-aws_sdk"                  ]] && echo "::set-output name=skip::true"
          [[ "${{ matrix.gem }}" == "opentelemetry-instrumentation-delayed_job"              ]] && echo "::set-output name=skip::true"
          [[ "${{ matrix.gem }}" == "opentelemetry-instrumentation-graphql"                  ]] && echo "::set-output name=skip::true"
          [[ "${{ matrix.gem }}" == "opentelemetry-instrumentation-http"                     ]] && echo "::set-output name=skip::true"
          [[ "${{ matrix.gem }}" == "opentelemetry-instrumentation-http_client"              ]] && echo "::set-output name=skip::true"
          [[ "${{ matrix.gem }}" == "opentelemetry-instrumentation-koala"                    ]] && echo "::set-output name=skip::true"
          [[ "${{ matrix.gem }}" == "opentelemetry-instrumentation-lmdb"                     ]] && echo "::set-output name=skip::true"
          [[ "${{ matrix.gem }}" == "opentelemetry-instrumentation-rack"                     ]] && echo "::set-output name=skip::true"
          [[ "${{ matrix.gem }}" == "opentelemetry-instrumentation-rails"                    ]] && echo "::set-output name=skip::true"
          # This is essentially a bash script getting evaluated, so we need to return true or the whole job fails.
          true

      - name: "Test JRuby"
        if: "${{ matrix.os == 'ubuntu-latest' && steps.jruby_skip.outputs.skip == 'false' }}"
        uses: ./.github/actions/test_gem
        with:
          gem: "${{ matrix.gem }}"
          ruby: "jruby"

  # These builds require sidecar services (postgres, redis, etc) in order to run their test suites.
  instrumentation_with_services:
    strategy:
      fail-fast: false
      # We don't run on macos and windows since service containers aren't supported there.
      matrix:
        gem:
          - opentelemetry-instrumentation-bunny
          - opentelemetry-instrumentation-dalli
          - opentelemetry-instrumentation-mongo
          - opentelemetry-instrumentation-mysql2
          - opentelemetry-instrumentation-pg
          - opentelemetry-instrumentation-que
          - opentelemetry-instrumentation-rdkafka
          - opentelemetry-instrumentation-redis
          - opentelemetry-instrumentation-resque
          - opentelemetry-instrumentation-ruby_kafka
          - opentelemetry-instrumentation-sidekiq
          - opentelemetry-instrumentation-trilogy
    name: ${{ matrix.gem }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: "Test Ruby 3.1"
        uses: ./.github/actions/test_gem
        with:
          gem: "${{ matrix.gem }}"
          ruby: "3.1"
      - name: "Test Ruby 3.0"
        uses: ./.github/actions/test_gem
        with:
          gem: "${{ matrix.gem }}"
          ruby: "3.0"
      - name: "Test Ruby 2.7"
        uses: ./.github/actions/test_gem
        with:
          gem: "${{ matrix.gem }}"
          ruby: "2.7"
          yard: true
          rubocop: true
          build: true
      - name: "JRuby Filter"
        id: jruby_skip
        shell: bash
        run: |
          echo "::set-output name=skip::false"
          [[ "${{ matrix.gem }}" == "opentelemetry-instrumentation-bunny"      ]] && echo "::set-output name=skip::true"
          [[ "${{ matrix.gem }}" == "opentelemetry-instrumentation-mysql2"     ]] && echo "::set-output name=skip::true"
          [[ "${{ matrix.gem }}" == "opentelemetry-instrumentation-pg"         ]] && echo "::set-output name=skip::true"
          [[ "${{ matrix.gem }}" == "opentelemetry-instrumentation-que"        ]] && echo "::set-output name=skip::true"
          [[ "${{ matrix.gem }}" == "opentelemetry-instrumentation-rdkafka"    ]] && echo "::set-output name=skip::true"
          [[ "${{ matrix.gem }}" == "opentelemetry-instrumentation-redis"      ]] && echo "::set-output name=skip::true"
          [[ "${{ matrix.gem }}" == "opentelemetry-instrumentation-resque"     ]] && echo "::set-output name=skip::true"
          [[ "${{ matrix.gem }}" == "opentelemetry-instrumentation-ruby_kafka" ]] && echo "::set-output name=skip::true"
          [[ "${{ matrix.gem }}" == "opentelemetry-instrumentation-sidekiq"    ]] && echo "::set-output name=skip::true"
          [[ "${{ matrix.gem }}" == "opentelemetry-instrumentation-trilogy"    ]] && echo "::set-output name=skip::true"
          # This is essentially a bash script getting evaluated, so we need to return true or the whole job fails.
          true

      - name: "Test JRuby"
        if: "${{ steps.jruby_skip.outputs.skip == 'false' }}"
        uses: ./.github/actions/test_gem
        with:
          gem: "${{ matrix.gem }}"
          ruby: "jruby"
    services:
      zookeeper:
        image: confluentinc/cp-zookeeper:latest
        ports:
          - 2181:2181
        env:
          ZOOKEEPER_CLIENT_PORT: 2181
          ZOOKEEPER_TICK_TIME: 2000
      kafka:
        image: confluentinc/cp-kafka:latest
        ports:
          - 9092:9092
          - 29092:29092
        env:
          KAFKA_BROKER_ID: 1
          KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
          KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:29092,PLAINTEXT_HOST://localhost:9092
          KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
          KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
          KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      memcached:
        image: memcached:alpine
        ports:
          - 11211:11211
      mongodb:
        image: mongo:4.4
        ports:
          - 27017:27017
      redis:
        image: bitnami/redis:6.2
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        env:
          REDIS_PASSWORD: "passw0rd"
      mysql:
        image: mysql:5.6
        env:
          MYSQL_DATABASE: mysql
          MYSQL_ROOT_PASSWORD: root
          MYSQL_PASSWORD: mysql
          MYSQL_USER: mysql
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=5s --health-timeout=2s --health-retries=3
      rabbitmq:
        image: rabbitmq:3.8-alpine
        ports:
          - "5672:5672"
      postgres:
        image: postgres:13
        env:
          POSTGRES_PASSWORD: postgres
        ports:
          - 5432:5432
        options: --health-cmd="pg_isready" --health-interval=5s --health-timeout=2s --health-retries=3
