name: CI

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  test:
    if: ${{ github.repository == 'open-telemetry/opentelemetry-ruby' }}
    strategy:
      matrix:
        include:
          - name: Ruby 2.5
            container: circleci/ruby:2.5-buster
            flags: --include-simple --include-appraisal
          - name: Ruby 2.6
            container: circleci/ruby:2.6-buster
            flags: --include-simple --include-appraisal
          - name: Ruby 2.7
            container: circleci/ruby:2.7-buster
            flags: --include-simple --include-appraisal --check-rubocop --check-yard
          - name: Ruby 3.0
            container: circleci/ruby:3.0-buster
            flags: --include-simple --include-appraisal --exclude opentelemetry-exporter-otlp
          - name: JRuby
            container: circleci/jruby:latest
            flags: --include-simple --exclude opentelemetry-resource_detectors --exclude opentelemetry-exporter-otlp
      fail-fast: false
    name: Test ${{ matrix.name }} (${{ matrix.flags }})
    runs-on: ubuntu-latest
    container: ${{ matrix.container }}
    env:
      JRUBY_OPTS: --debug
    services:
      zookeeper:
        image: confluentinc/cp-zookeeper:latest
        ports:
          - 2181:2181
        env:
          ZOOKEEPER_CLIENT_PORT: 2181
          ZOOKEEPER_TICK_TIME: 2000
      kafka:
        image: confluentinc/cp-kafka:latest
        ports:
          - 9092:9092
        env:
          KAFKA_BROKER_ID: 1
          KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
          KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
          KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
          KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
          KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      memcached:
        image: memcached:alpine
        ports:
          - 11211:11211
      mongodb:
        image: mongo:4.4
        ports:
          - 27017:27017
      sql:
        image: mysql:5.6
        env:
          TEST_MYSQL_USER: root
          TEST_MYSQL_ROOT_PASSWORD: root
          TEST_MYSQ_DB: mysql
          MYSQL_DATABASE: mysql
          MYSQL_ROOT_PASSWORD: root
          MYSQL_PASSWORD: mysql
          MYSQL_USER: mysql
        ports:
          - 3306
        options: --health-cmd="mysqladmin ping" --health-interval=5s --health-timeout=2s --health-retries=3
    steps:
      - name: Setup file system permissions
        run: sudo chmod -R 777 $GITHUB_WORKSPACE /github /__w/_temp
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install tools
        run: gem install --no-document bundler:2.1.4 toys:0.11.2
      - name: Run tests
        env:
          TEST_KAFKA_HOST: kafka
          TEST_KAFKA_PORT: 29092
          TEST_MYSQL_HOST: sql
          TEST_MYSQL_PORT: ${{ job.services.mysql.ports['3306'] }}
          TEST_MEMCACHED_HOST: memcached
          TEST_MEMCACHED_PORT: ${{ job.services.memcached.ports['11211'] }}
          TEST_MONGODB_HOST: mongodb
          TEST_MONGODB_PORT: ${{ job.services.mongodb.ports['27017'] }}
        run: toys ci ${{ matrix.flags }}
