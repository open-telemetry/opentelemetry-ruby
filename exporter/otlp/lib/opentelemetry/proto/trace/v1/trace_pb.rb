# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: opentelemetry/proto/trace/v1/trace.proto

require 'google/protobuf'

require 'opentelemetry/proto/common/v1/common_pb'
require 'opentelemetry/proto/resource/v1/resource_pb'
Google::Protobuf::DescriptorPool.generated_pool.build do
  add_file("opentelemetry/proto/trace/v1/trace.proto", :syntax => :proto3) do
    add_message "opentelemetry.proto.trace.v1.ResourceSpans" do
      optional :resource, :message, 1, "opentelemetry.proto.resource.v1.Resource"
      repeated :instrumentation_library_spans, :message, 2, "opentelemetry.proto.trace.v1.InstrumentationLibrarySpans"
    end
    add_message "opentelemetry.proto.trace.v1.InstrumentationLibrarySpans" do
      optional :instrumentation_library, :message, 1, "opentelemetry.proto.common.v1.InstrumentationLibrary"
      repeated :spans, :message, 2, "opentelemetry.proto.trace.v1.Span"
    end
    add_message "opentelemetry.proto.trace.v1.Span" do
      optional :trace_id, :bytes, 1
      optional :span_id, :bytes, 2
      optional :trace_state, :string, 3
      optional :parent_span_id, :bytes, 4
      optional :name, :string, 5
      optional :kind, :enum, 6, "opentelemetry.proto.trace.v1.Span.SpanKind"
      optional :start_time_unix_nano, :fixed64, 7
      optional :end_time_unix_nano, :fixed64, 8
      repeated :attributes, :message, 9, "opentelemetry.proto.common.v1.KeyValue"
      optional :dropped_attributes_count, :uint32, 10
      repeated :events, :message, 11, "opentelemetry.proto.trace.v1.Span.Event"
      optional :dropped_events_count, :uint32, 12
      repeated :links, :message, 13, "opentelemetry.proto.trace.v1.Span.Link"
      optional :dropped_links_count, :uint32, 14
      optional :status, :message, 15, "opentelemetry.proto.trace.v1.Status"
    end
    add_message "opentelemetry.proto.trace.v1.Span.Event" do
      optional :time_unix_nano, :fixed64, 1
      optional :name, :string, 2
      repeated :attributes, :message, 3, "opentelemetry.proto.common.v1.KeyValue"
      optional :dropped_attributes_count, :uint32, 4
    end
    add_message "opentelemetry.proto.trace.v1.Span.Link" do
      optional :trace_id, :bytes, 1
      optional :span_id, :bytes, 2
      optional :trace_state, :string, 3
      repeated :attributes, :message, 4, "opentelemetry.proto.common.v1.KeyValue"
      optional :dropped_attributes_count, :uint32, 5
    end
    add_enum "opentelemetry.proto.trace.v1.Span.SpanKind" do
      value :SPAN_KIND_UNSPECIFIED, 0
      value :INTERNAL, 1
      value :SERVER, 2
      value :CLIENT, 3
      value :PRODUCER, 4
      value :CONSUMER, 5
    end
    add_message "opentelemetry.proto.trace.v1.Status" do
      optional :code, :enum, 1, "opentelemetry.proto.trace.v1.Status.StatusCode"
      optional :message, :string, 2
    end
    add_enum "opentelemetry.proto.trace.v1.Status.StatusCode" do
      value :Ok, 0
      value :Cancelled, 1
      value :UnknownError, 2
      value :InvalidArgument, 3
      value :DeadlineExceeded, 4
      value :NotFound, 5
      value :AlreadyExists, 6
      value :PermissionDenied, 7
      value :ResourceExhausted, 8
      value :FailedPrecondition, 9
      value :Aborted, 10
      value :OutOfRange, 11
      value :Unimplemented, 12
      value :InternalError, 13
      value :Unavailable, 14
      value :DataLoss, 15
      value :Unauthenticated, 16
    end
  end
end

module Opentelemetry
  module Proto
    module Trace
      module V1
        ResourceSpans = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("opentelemetry.proto.trace.v1.ResourceSpans").msgclass
        InstrumentationLibrarySpans = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("opentelemetry.proto.trace.v1.InstrumentationLibrarySpans").msgclass
        Span = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("opentelemetry.proto.trace.v1.Span").msgclass
        Span::Event = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("opentelemetry.proto.trace.v1.Span.Event").msgclass
        Span::Link = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("opentelemetry.proto.trace.v1.Span.Link").msgclass
        Span::SpanKind = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("opentelemetry.proto.trace.v1.Span.SpanKind").enummodule
        Status = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("opentelemetry.proto.trace.v1.Status").msgclass
        Status::StatusCode = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("opentelemetry.proto.trace.v1.Status.StatusCode").enummodule
      end
    end
  end
end
